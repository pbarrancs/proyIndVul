ggplot(aes(x = value, y = Desem, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[-c(1,2,3,4,5,6,7,11,16)], label = T)
omcdiag(df[-c(1,2,3,4,5,6,7,11,16)], df[2])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Prom_escolaridad <- categcolum(df,16,c("Bajo","Medio","Alto"))
P_Medico <- categcolum(df,11,c("Bajo","Medio","Alto"))
C_Sal <- categcolum(df,7,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[-c(1,2,3,4,5,6,7,11,16)],Prom_escolaridad,P_Medico,C_Sal)
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=esp_vida, y=C_Conf, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
ggplot(df, aes(x=Remuneracion, y=P_af_serv, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly', 'tidyr', 'gridExtra')
lapply(libs, instalar)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000 #Remuneración en miles de pesos
df[,15]<-df[,15]/100
df %>%
gather(-In_inf, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = In_inf, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Remuneracion, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Remuneracion, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-C_ser, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = C_ser, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Desem, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Desem, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[-c(1,2,3,4,5,6,7,11,16)], label = T)
omcdiag(df[-c(1,2,3,4,5,6,7,11,16)], df[2])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Prom_escolaridad <- categcolum(df,16,c("Bajo","Medio","Alto"))
P_Medico <- categcolum(df,11,c("Bajo","Medio","Alto"))
C_Sal <- categcolum(df,7,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[-c(1,2,3,4,5,6,7,11,16)],Prom_escolaridad,P_Medico,C_Sal)
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=esp_vida, y=C_Conf, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
ggplot(df, aes(x=Remuneracion, y=P_af_serv, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df)
ggcorr(df[-c(1,2,3,4,12,15)], label = T)
omcdiag(df[-c(1,2,3,4,12,15)], df[2])
omcdiag(df[-c(1,2,3,4,5,12,15)], df[2])
View(df.1)
View(df)
omcdiag(df[-c(1,2,3,4,5,6,12,15)], df[2])
omcdiag(df[-c(1,2,3,4,6,7,12,15)], df[2])
omcdiag(df[-c(1,2,3,4,6,7,8,12,15)], df[2])
omcdiag(df[-c(1,2,3,4,6,7,8,9,12,15)], df[2])
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[-c(1,2,3,4,5)], label = T)
ggcorr(df[-c(1,2,3,4,16)], label = T)
omcdiag(df[-c(1,2,3,415)], df[2])
omcdiag(df[-c(1,2,3,4,15)], df[2])
omcdiag(df[-c(1,2,3,4,16)], df[2])
ggcorr(df[-c(1,2,3,4,6,16)], label = T)
ggcorr(df[,-c(1,2,3,4,8,9,12,15)]], label = T)
ggcorr(df[,-c(1,2,3,4,8,9,12,15)], label = T)
omcdiag(df[,-c(1,2,3,4,8,9,12,15)], df[2])
ggcorr(df[-c(1,2,3,4)], label = T)
#ggcorr(df[-c(1,2,3,4)], label = T)
library(corrplot)
corrplot(cor(df[,-c(1,2,3,4)], method = "pearson"), type = "upper", method = "circle")
ggcorr(df[,-c(5,6,7,11,13,16)], label = T)
#ggcorr(df[,c(5,6,7,11,13,16)], label = T)
corrplot(cor(df[,c(5,6,7,11,13,16)], method = "pearson"), type = "upper", method = "circle")
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[,c(5,6,7,11,13,16)], label = T)
omcdiag(df[,c(5,6,7,11,13,16)], df[2])
View(df)
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Medio","Alto"))
C_Conf <- categcolum(df,12,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[-c(1,2,3,4,5,6,7,11,16)],Desem,C_Conf)
View(df.1)
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
df.1 <- cbind(df[,c(5,6,7,11,13,16)],Desem,C_Conf)
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly', 'tidyr', 'gridExtra')
lapply(libs, instalar)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000 #Remuneración en miles de pesos
df[,15]<-df[,15]/100
df %>%
gather(-In_inf, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = In_inf, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Remuneracion, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Remuneracion, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-C_ser, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = C_ser, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Desem, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Desem, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[,c(5,6,7,11,13,16)], label = T)
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Medio","Alto"))
C_Conf <- categcolum(df,12,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[,c(5,6,7,11,13,16)],Desem,C_Conf)
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=Remuneracion, y=P_af_serv, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.1, aes(x=Prom_escolaridad, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.1, aes(x=C_Conf, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly', 'tidyr', 'gridExtra')
lapply(libs, instalar)
plot_ly(x=df$C_alim y=df$C_sal, z=df$C_ser, type="scatter3d", mode="markers", color=df$C_alim)
plot_ly(x=df$C_alim, y=df$C_sal, z=df$C_ser, type="scatter3d", mode="markers", color=df$C_alim)
(p <- ggplot(df, aes(x=as.factor(Alcaldia), y=Ingreso_inferior)) +
geom_point(position=position_jitter(width=0.1)) +
coord_flex_cart(bottom=brackets_horisontal(), left=capped_vertical('both')) +
theme_light() + theme(panel.border=element_blank(), axis.line = element_line())
)
p <- ggplot(df, aes(x=Alcaldia, y=Ingreso_inferior)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly')
lapply(libs, instalar)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000
df.1<-df[,-c(1,3,4)]
ggcorr(df.1[-1], label = T)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem)
df.3 %>% ggpairs(columns = c(2:3),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Alc))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
p <- ggplot(df, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
ggplot(df, aes(x=Remuneracion, y=esp_vida, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
plot_ly(x=df$C_alim, y=df$C_sal, z=df$C_ser, type="scatter3d", mode="markers", color=df$C_alim)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly', 'tidyr', 'gridExtra')
lapply(libs, instalar)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000 #Remuneración en miles de pesos
df[,15]<-df[,15]/100
df %>%
gather(-In_inf, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = In_inf, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Remuneracion, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Remuneracion, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-C_ser, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = C_ser, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Desem, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Desem, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[,c(5,6,7,11,13,16)], label = T)
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Medio","Alto"))
C_Conf <- categcolum(df,12,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[,c(5,6,7,11,13,16)],Desem,C_Conf)
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=Remuneracion, y=P_af_serv, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
p <- ggplot(df.1, aes(x=C_Conf, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
plot_ly(x=df$C_alim, y=df$C_sal, z=df$C_ser, type="scatter3d", mode="markers", color=df$C_alim)
ggplot(df.1,aes(Desem, esp_vida, color=)) + geom_quasirandom()
View(df)
View(df.1)
View(df.1)
#ggplot(df.1,aes(df.1$Desem, df$esp_vida, color=)) + geom_quasirandom()
ggplot(sub_mpg, aes(df.1$Desem, df$esp_vida, color=Alc)) + geom_quasirandom(dodge.width=1)
#ggplot(df.1,aes(df.1$Desem, df$esp_vida, color=)) + geom_quasirandom()
ggplot(df.1, aes(df.1$Desem, df$esp_vida, color=Alc)) + geom_quasirandom(dodge.width=1)
#ggplot(df.1,aes(df.1$Desem, df$esp_vida, color=)) + geom_quasirandom()
ggplot(df.1, aes(df.1$Desem, df$esp_vida, color=df$Alc)) + geom_quasirandom(dodge.width=1)
#ggplot(df.1,aes(df.1$Desem, df$esp_vida, color=)) + geom_quasirandom()
ggplot(df.1, aes(df.1$Desem, df$esp_vida, color=df.1$Desem)) + geom_quasirandom(dodge.width=1)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('GGally', 'tidyverse', 'mctest', 'ggplot2', 'ggbeeswarm','dplyr', 'plotly', 'tidyr', 'gridExtra')
lapply(libs, instalar)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000 #Remuneración en miles de pesos
df[,15]<-df[,15]/100
df %>%
gather(-In_inf, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = In_inf, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Remuneracion, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Remuneracion, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-C_ser, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = C_ser, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
df %>%
gather(-Desem, -Alc, -Clave,-km2, -Pob, key = "var", value = "value") %>%
ggplot(aes(x = value, y = Desem, color = Alc)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
ggcorr(df[-c(1,2,3,4)], label = T)
ggcorr(df[,c(5,6,7,11,13,16)], label = T)
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Medio","Alto"))
C_Conf <- categcolum(df,12,c("Bajo","Medio","Alto"))
df.1 <- cbind(df[,c(5,6,7,11,13,16)],Desem,C_Conf)
p <- ggplot(df.1, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=Remuneracion, y=P_af_serv, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
p <- ggplot(df.1, aes(x=C_Conf, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
plot_ly(x=df$C_alim, y=df$C_sal, z=df$C_ser, type="scatter3d", mode="markers", color=df$C_alim)
#ggplot(df.1,aes(df.1$Desem, df$esp_vida, color=)) + geom_quasirandom()
ggplot(df.1, aes(df.1$Desem, df$esp_vida, color=df.1$Desem)) + geom_quasirandom(dodge.width=1)
