omcdiag(df[c(11,5,8,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(3,5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(4,5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(6,5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,6,78,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,6,7,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,6,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,9,10,11,12,13,14)], df[1])
library(mctest)
omcdiag(df[c(5,8,10,11,12,13,14)], df[1])
df<- read.csv("~/ITAM/Décimo/index/proyIndVul/Data/BD.csv")
df<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df[c(5,8,10,11,12,13,14)], df[1])
library(GGally)
library(ggplot2)
ggpairs(X[c(2,4,7,10,11,12,13)])
df<- read.csv("~/ITAM/Décimo/index/proyIndVul/Data/BD.csv")
View(df)
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,10,11,12,13,14)], df[1])
omcdiag(df.1[c(5,8,10,11,12,13,14)], df.1[1])
library(GGally)
library(ggplot2)
df.2<-df.1c(5,8,10,11,12,13,14)
df.2<-df.1[c(5,8,10,11,12,13,14)]
df.3<-df[-c(2,3,4)]
View(df.3)
p <- ggplot(df.3, aes(x=Alcaldia, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.3, aes(x=Alc, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
(p <- ggplot(df.3, aes(x=as.factor(Alc), y=In_inf)) +
geom_point(position=position_jitter(width=0.1)) +
coord_flex_cart(bottom=brackets_horisontal(), left=capped_vertical('both')) +
theme_light() + theme(panel.border=element_blank(), axis.line = element_line())
)
library(lemon)
install.packages("lemon")
install.packages("lemon")
library(lemon)
install.packages("lemon")
install.packages("lemon")
df<- read.csv("BD.csv")
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,10,11,12,13,14)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[,1],df.1[,c(5,8,10,11,12,13,14)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Mediano","Alto"))
P_Medico <- categcolum(df,12,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem,P_Medico)
library(GGally)
library(tidyverse)
df.2 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)))
p <- ggplot(df.3, aes(x=Alc, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df.3)
View(df.3)
View(df.2)
View(df.1)
df.2<- cbind(df[1],df.1[,c(5,8,10,11,12,13,14)])
View(df.2)
df.2<- cbind(df[1],df.1[c(5,8,10,11,12,13,14)])
View(df.2)
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Mediano","Alto"))
P_Medico <- categcolum(df,12,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem,P_Medico)
library(GGally)
library(tidyverse)
df.2 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)))
p <- ggplot(df.3, aes(x=Alc, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df.3)
View(df.1)
p <- ggplot(df, aes(x=Alc, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df, aes(x=Alc, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df)
View(df.3)
View(df.3)
p <- ggplot(df, aes(x=Alc, y=PP_Medico)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df, aes(x=Alc, y=P_Medico)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df, aes(x=P_Medico, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df, aes(x=Desem, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df.2)
View(df.3)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
rm(list = ls())
library(datasets)
library(ggplot2)
data(airquality)
force(airquality)
source('~/.active-rstudio-document', echo=TRUE)
View(airquality)
p <- ggplot(df, aes(x=Desem, y=In_inf)) +
geom_boxplot()
p <- ggplot(df.3, aes(x=Desem, y=In_inf)) +
geom_boxplot()
df<- read.csv("BD.csv")
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,10,11,12,13,14)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,10,11,12,13,14)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,10,c("Bajo","Mediano","Alto"))
P_Medico <- categcolum(df,12,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem,P_Medico)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
p <- ggplot(df.3, aes(x=Desem, y=In_inf)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.3, aes(x=Desem, y=Camas)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df)
View(df)
View(df)
df<-df[,5:17] / df[,3]
df<- read.csv("BD.csv")
df<-df[,5:14] / df[,3]
df<- read.csv("BD.csv")
df<- read.csv("BD.csv")
df<-df[,5:14] / df[,3]
df<-df[,5:13] / df[,3]
df<- read.csv("BD.csv")
View(df)
#df<-df[,5:13] / df[,3]
df.1<-df[,-c(1,3,4)]
View(df.1)
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,10,11,12,13)], df.1[1])
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem,P_Medico)
df<- read.csv("BD.csv")
df<-df[,5:13] / df[,3]
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
View(df.3)
df<- read.csv("BD.csv")
df<-df[,5:13] / df[,3]
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
df<- read.csv("BD.csv")
df<-df[,5:13] / df[,3]
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
View(df.1)
df<- read.csv("BD.csv")
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem,P_Medico)
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df)
df<- read.csv("BD.csv")
df<-df[5,12]/df[,3]
df.1<-df[,-c(1,3,4)]
df<-df[,5:12]/df[,3]
df<- read.csv("BD.csv")
df<-df[,5:12]/df[,3]
df<- read.csv("BD.csv")
df[,5:12]<-df[,5:12]/df[,3]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
View(df.3)
View(df.2)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
View(df.2)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
gbeeswarm
install.packages("ggbeeswarm")
library(ggbeeswarm)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
View(df.3)
View(df)
df<- read.csv("BD.csv")
df[,5:12]<-df[,5:12]/df[,3]
df.1<-df[,-c(1,3,4)]
df<- read.csv("BD.csv")
View(df)
df<- read.csv("BD.csv")
df[,5:12]<-df[,5:13]/df[,3]
df.1<-df[,-c(1,3,4)]
df[,5:13]<-df[,5:13]/df[,3]
df.1<-df[,-c(1,3,4)]
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
library(ggbeeswarm)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
df[,13]<-df[,13]*1000
View(df)
df<- read.csv("BD.csv")
df[,5:13]<-df[,5:13]/df[,3]
df[,13]<-df[,13]*1000
df.1<-df[,-c(1,3,4)]
library(corrplot)
corrplot(cor(df.1[-1], method = "pearson"), type = "upper", method = "circle")
library(mctest)
omcdiag(df.1[c(5,8,9,10,11,12,13)], df.1[1])
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
categcolum <- function(daf,col,names)
{
v <- as.numeric(scale(daf[,col]))
n <- length(names)
dim <- length(v)
part <- 1/n
r <- c()
for (i in 1:dim)
{
if(v[i] <= -1)
r[i] <- names[1]
else
if(v[i] <= 1)
r[i] <- names[2]
else
r[i] <- names[3]
}
return(r)
}
#Construccion de df.3, es decir df.2 + varibles categoricas
Desem <- categcolum(df,9,c("Bajo","Mediano","Alto"))
#P_Medico <- categcolum(df,11,c("Bajo","Mediano","Alto"))
df.3 <- cbind(df.2,Desem)
library(GGally)
library(tidyverse)
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
p <- ggplot(df.3, aes(x=Desem, y=Remuneracion)) +
geom_boxplot()
p+ theme(axis.text.x = element_text(angle = 90))
library(ggbeeswarm)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
View(df)
library(GGally)
library(ggplot2)
df.2<- cbind(df[1],df.1[c(5,8,9,10,11,12,13)])
library(ggbeeswarm)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
library(ggbeeswarm)
ggplot(df.3,aes(Desem, esp_vida)) + geom_quasirandom()
View(df)
View(df.1)
View(df)
View(df.1)
View(df.2)
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = pob)) +
geom_point(alpha=0.7)
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = Pob)) +
geom_point(alpha=0.7)
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = Pob, fill=Alc)) +
geom_point(alpha=0.7)
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
library(dplyr)
ggplot(df, aes(x=Remuneracion, y=esp_vida, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
library(dplyr)
ggplot(df, aes(x=Desem, y=esp_vida, size = Pob, col=Alc)) +
geom_point(alpha=0.7)
library(GGally)
library(GGally)
devtools::install_github("rstudio/packrat")
df.3 %>% ggpairs(columns = c(2:8),upper = list(continuous = wrap('cor',size = 2)),  mapping = aes(color = Desem))
